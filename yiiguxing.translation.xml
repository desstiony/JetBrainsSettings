<application>
  <component name="AppStorage">
    <histories>
      <item value="A method reference to the exception constructor with an empty * argument list can be used as the supplier. For example," />
      <item value="Return the contained value, if present, otherwise throw an exception * to be created by the provided supplier." />
      <item value="captcha" />
      <item value="The rectangle is filled using the graphics context's current color" />
      <item value="the width of the rectangle to be filled" />
      <item value="coordinate * of the rectangle to be filled." />
      <item value="Fills the specified rectangle. * The left and right edges of the rectangle are at" />
      <item value="a &lt;code&gt;Graphics2D&lt;/code&gt;, which can be used to draw into * this image." />
      <item value="This method returns a {@link Graphics2D}, but is here * for backwards compatibility. {@link #createGraphics() createGraphics} is more * convenient, since it is declared to return a" />
      <item value="CAPTCHA" />
      <item value="Draws a line, using the current color, between the points * &lt;code&gt;(x1,&amp;nbsp;y1)&lt;/code&gt; and &lt;code&gt;(x2,&amp;nbsp;y2)&lt;/code&gt; * in this graphics context's coordinate system." />
      <item value="Draws a line, using the current color, between the points" />
      <item value="proxy" />
      <item value="An implementation of {@link WebMvcConfigurer} with empty methods allowing * subclasses to override only the methods they're interested in. *" />
      <item value="TEMPLATE ENGINE CONFIGURATION" />
      <item value="Bandwidth Limit Exceeded" />
      <item value="the username must match the OpenID of the user you are * // logging in with" />
      <item value="A basic example accepting the defaults and not using attribute exchange" />
      <item value="scheme" />
      <item value="memory authentication" />
      <item value="defines" />
      <item value="The configuration will * require that any URL that is requested will require a User with the role &quot;ROLE_USER&quot;." />
      <item value="The most basic form based configuration can be seen below" />
      <item value="is similar to Spring Security's XML &amp;lt;http&amp;gt; element in the * namespace configuration. It allows configuring web based security for specific http * requests. By default it will be applied to all requests, but can be restricted using * {@link #requestMatcher(RequestMatcher)} or other similar methods." />
      <item value="the expression to secure the URLs" />
      <item value="Allows specifying that URLs are secured by an arbitrary expression" />
      <item value="The configuration below requires * authentication to every URL and will grant access to URLs starting with /admin/ to * only the &quot;admin&quot; user." />
      <item value="We can also configure multiple URLs. The configuration below requires * authentication to every URL and will grant access to URLs starting with /admin/ to * only the &quot;admin&quot; user. All other URLs either user can access" />
      <item value="The configuration below requires authentication to every URL and will grant access * to both the user &quot;admin&quot; and &quot;user&quot;." />
      <item value="granted" />
      <item value="A granted authority textual representation is required" />
      <item value="&quot;A granted authority textual representation is required" />
      <item value="authentication" />
      <item value="to allow customization of the DAO * authentication" />
      <item value="Note that additional * {@link UserDetailsService}'s may override this {@link UserDetailsService} as the * default." />
      <item value="available" />
      <item value="sure" />
      <item value="ensure" />
      <item value="to allow" />
      <item value="customization of * the authentication." />
      <item value="Add authentication based upon the custom {@link UserDetailsService} that is passed * in" />
      <item value="Add authentication based upon the custom" />
      <item value="memory authenticatio" />
      <item value="easily" />
      <item value="Allows" />
      <item value="Manager" />
      <item value="Authentication" />
      <item value="attribute" />
      <item value="under" />
      <item value="The name of the path variable to bind to." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="147" />
        <entry key="ENGLISH" value="148" />
        <entry key="ROMANIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>